class MationHTML{constructor(){this.rules=[]}#a=null;#b=[];set noRuleFallback(e){if("function"!=typeof e)throw Error("Given callback should be a function.");this.#a=e}set ignoreSelectors(e){if(!Array.isArray(e))throw Error("Given tags should be an array of strings.");for(let t of e){if("string"!=typeof t)throw Error("Each selector should be a string.");this.#b.includes(t)||this.#b.push(t)}}register(e){if(Array.isArray(e)){for(let t of e)this.#c(t);this.rules.push(...e)}else this.#c(e),this.rules.push(e)}convert(e,t=!0){if("string"!=typeof e)throw Error("Input must be a string.");let o=new DOMParser,r=o.parseFromString(e,"text/html");return t?this.#d(r.body):this.#d(r.documentElement)}#d(e){let t="";for(let o of e.childNodes)if(o.nodeType===Node.TEXT_NODE)t+=o.textContent.trim();else if(o.nodeType===Node.ELEMENT_NODE){if(this.#b.some(e=>o.matches(e)))continue;t+=this.#e(o).trim()}return t.trim()}#e(r){let n=this.rules.find(e=>r.matches(e.selector)),l=this.#d(r),s={};for(let i of r.attributes)s[i.name]=i.value;if(n){if(n.format){let a=n.format({node:r,content:l,dataset:s});if(void 0!==a)return a;throw Error(`The format handler for the selector "${n.selector}" must return a content.`)}return n.to.replace(/{dataset\.([\w-]+)}/g,(e,t)=>s[t]||"").replace(/{content}/g,l).replace(/{spacing}/g,"")}if(this.#a&&"function"==typeof this.#a){let c=this.#a({node:r,content:l,dataset:s});if(void 0!==c)return c;throw Error("The noRuleFallback function must return a content")}return console.warn(`No rule found for element: <${r.tagName}>`),l}#c(u){if("object"!=typeof u||!u.selector||!(u.to||u.format))throw Error('Invalid rule: Must have a "selector" and a "format" or "to".')}}